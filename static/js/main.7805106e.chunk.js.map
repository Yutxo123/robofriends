{"version":3,"sources":["reportWebVitals.js","component/Card.js","component/CardList.js","component/Scroll.js","component/SearchBox.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","map","user","i","Scroll","style","overflow","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","onsearchchange","event","setState","searchfield","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCKCQ,EAXH,SAACC,GACT,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACtB,gCACI,mCAAMJ,EAAMK,QACZ,kCAAKL,EAAMM,MAAX,cCQDC,EAZE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OACA,cAAE,EAAF,CAAeR,GAAII,EAAOI,GAAGR,GAAIC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAGpB,OACQ,8BACSH,KCAFI,EATA,SAACb,GACZ,OACA,qBAAKc,MAAS,CAAEC,SAAW,SAASC,OAAO,kBAAkBC,OAAO,SAApE,SACOjB,EAAMkB,YCSFC,EAZG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACpB,OACI,qBAAKnB,UAAU,SAAf,SACQ,uBAAOA,UAAU,sDACjBoB,KAAK,SACLC,YAAa,gBACbC,SAAUH,OCqCPI,E,kDAvCX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAdtC,EAAKC,MAAO,CACRvB,OAAO,GACPoB,YAAY,IAJX,E,qDAOjB,WAAoB,IAAD,OACfI,MAAM,6CAA6CvC,MAAK,SAAAwC,GACrD,OAAOA,EAASC,UAElBzC,MAAK,SAAA0C,GACF,EAAKR,SAAS,CAACnB,OAAS2B,S,oBAM5B,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAA9B,GAC5C,OAAOA,EAAOH,KAAKkC,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAErE,OAAiC,IAA7BF,KAAKN,MAAMvB,OAAOiC,OACZ,yCAIV,sBAAKxC,UAAU,SAAf,UACI,+CACA,cAAC,EAAD,CAAWmB,aAAgBiB,KAAKZ,iBAChC,cAAC,EAAD,UACY,cAAC,EAAD,CAAUjB,OAAU4B,a,GAhC1BM,aCGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACoB,cAAC,EAAD,MAEpBC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.7805106e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nconst Card =(props)=> { \r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${props.id}?200x200`}/>\r\n            <div> \r\n                <h1> {props.name}</h1>\r\n                <p> {props.email} </p>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=> {\r\n    const cardComponent = robots.map((user,i)=>{\r\n        return(\r\n        < Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n        )\r\n    })\r\nreturn(\r\n        <div>\r\n                {cardComponent}\r\n        </div>\r\n);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n    <div style = {{ overflow : 'Scroll',border:'1px solid black',height:'500px'}}>\r\n          {props.children}\r\n    </div>\r\n\r\n    );\r\n \r\n};\r\nexport default Scroll;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange})=>{\r\nreturn (\r\n    <div className='tc pa2'>\r\n            <input className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'\r\n            type='search' \r\n            placeholder ='search robots'\r\n            onChange={searchChange}\r\n            />\r\n            \r\n    </div>\r\n);\r\n}\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../component/CardList';\r\nimport Scroll from '../component/Scroll';\r\nimport SearchBox from '../component/SearchBox';\r\n\r\nclass App extends Component {\r\n    constructor(){                               // special method , to initilize variables // \r\n        super();                                 // this : what is the object envirment that we're in right now // \r\n            this.state ={                        // super () must be called to use this , it contains what change our app , it lives usually in the parent component // \r\n                robots:[],                       // make the website interactive , between the searchbox and robots // \r\n                searchfield:''\r\n            }\r\n    }\r\ncomponentDidMount(){\r\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => {\r\n       return response.json();\r\n    })\r\n    .then(users =>{\r\n        this.setState({robots : users})\r\n    });\r\n}\r\n    onsearchchange=(event)=>{\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if (this.state.robots.length === 0 ){\r\n           return <h1>Loading</h1>\r\n        }\r\n        else {\r\n    return(\r\n        <div className='tc pa2'>\r\n            <h1> RoboFriends </h1>\r\n            <SearchBox searchChange = {this.onsearchchange}/>  \r\n            <Scroll> \r\n                        <CardList robots = {filteredRobots}/>  \r\n            </Scroll>\r\n        </div>\r\n        );\r\n}\r\n}     \r\n}                                                           // robots are passed down as props , eventhough in the App.js is a state // \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'; \r\nimport App from './container/App.js';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n                      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}